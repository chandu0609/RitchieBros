<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-19T03:27:43Z" name="Default suite" finished-at="2023-01-19T03:28:56Z" duration-ms="72824">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-01-19T03:27:43Z" name="Default test" finished-at="2023-01-19T03:28:56Z" duration-ms="72824">
      <class name="parallel.ParallelTestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" started-at="2023-01-19T03:27:43Z" name="setUpClass" finished-at="2023-01-19T03:27:44Z" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" started-at="2023-01-19T03:27:44Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-19T03:28:54Z" duration-ms="69586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Assert Search Results"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Tests related to search engine]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" started-at="2023-01-19T03:27:44Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-19T03:28:28Z" duration-ms="43874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check Title of the website"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Tests related to Home Page]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" started-at="2023-01-19T03:27:44Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-19T03:28:39Z" duration-ms="54726" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check options available under Browse By Category - Fail case"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Tests related to Home Page]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: every item is one of {"Construction", "Agriculture", "Transport Trucks", "Trailers", "Vocational Trucks", "Lifting & Material Handling", "Vehicles & Buses", "Asphalt & Concrete", "Demolition & Recycling", "Drilling & Mining", "Aggregate", "Oil, Gas, Power & Utility", "Marine, Aircraft & Rail", "Real Estate", "Consumer Items", "Attachments", "Industrial Support", "Forestry & Environmental"}
     but: an item was "Aggregate1"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: every item is one of {"Construction", "Agriculture", "Transport Trucks", "Trailers", "Vocational Trucks", "Lifting & Material Handling", "Vehicles & Buses", "Asphalt & Concrete", "Demolition & Recycling", "Drilling & Mining", "Aggregate", "Oil, Gas, Power & Utility", "Marine, Aircraft & Rail", "Real Estate", "Consumer Items", "Attachments", "Industrial Support", "Forestry & Environmental"}
     but: an item was "Aggregate1"
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at parallel.HomeTest.subcategories_should_be_displayed(HomeTest.java:47)
at âœ½.subcategories should be displayed(classpath:parallel/Home.feature:21)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" started-at="2023-01-19T03:27:44Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-19T03:28:37Z" duration-ms="53361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check some options available under Browse By Category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Tests related to Home Page]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:parallel.ParallelTestRunner@6dab9b6d]" started-at="2023-01-19T03:28:54Z" name="tearDownClass" finished-at="2023-01-19T03:28:56Z" duration-ms="2720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- parallel.ParallelTestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
